name: CICD Automation Testing
 
on:
  workflow_call:
    inputs:
      branch:
        description: 'Target Branch'
        type: string
        required: true
        default: 'master'
      private_build:
        description: 'Private Build {true, false}'
        type: string
        required: true
        default: 'true'
  workflow_dispatch:
    inputs:
      device_type:
        description: 'Device Type {CWCE, Eric, Finia, Orion, Orville, Quantum, Reveos}'
        required: true
        default: 'Eric'
      build_type:
        description: 'Build Type {Dev, Rel, RC}'
        required: true
        default: 'Dev'
      private_build:
        description: 'Private Build {true, false}'
        required: true
        default: 'true'
      requested_sha:
        description: 'Requested SHA, leave blank for HEAD'
        required: false
 
jobs:
  enforce_private_build:
    runs-on: ubuntu-latest
    name: CICD Automation Testing
 
    steps:
      - name: Merge inputs
        shell: bash
        run: |
          # merge inputs from workflow_call and workflow_dispatch into env
          readonly build_type=${{ github.event.inputs.build_type || inputs.build_type }}
          readonly device_type=${{ github.event.inputs.device_type || inputs.device_type }}

          # Check if the branch is not master
          if [ "${{ github.ref }}" != "refs/heads/master" ]; then
            # If it's not the master branch, set private_build to true
            readonly private_build='true'
            echo "Workflow NOT executed on MASTER branch - private_build set to TRUE"
          else
            # For the master branch, use the input value of private_build
            readonly private_build=${{ github.event.inputs.private_build || inputs.private_build }}
          fi

          readonly requested_sha=${{ github.event.inputs.requested_sha || inputs.requested_sha }}

          echo "Setting environment variables:"
          echo "build_type=${build_type}" >> $GITHUB_ENV
          echo "device_type=${device_type}" >> $GITHUB_ENV
          echo "private_build='${private_build}'" >> $GITHUB_ENV
          echo "requested_sha=${requested_sha}" >> $GITHUB_ENV

      - name: Print Variable Values
        run: |
          echo "Printing variable values:"
          echo "build_type=${{ env.build_type }}"
          echo "device_type=${{ env.device_type }}"
          echo "private_build=${{ env.private_build }}"
          echo "requested_sha=${{ env.requested_sha }}"
